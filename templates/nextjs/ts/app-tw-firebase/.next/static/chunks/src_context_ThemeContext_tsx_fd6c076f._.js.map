{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Nikhi/Projects/opensource/Onetech/templates/nextjs/ts/app-tw-firebase/src/context/ThemeContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  ReactNode,\r\n  useEffect,\r\n} from \"react\";\r\n\r\nexport type ThemeMode = \"light\" | \"dark\" | \"system\";\r\n\r\ninterface ThemeContextType {\r\n  theme: ThemeMode;\r\n  setTheme: (theme: ThemeMode) => void;\r\n  toggleTheme: (theme: ThemeMode) => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const ThemeProvider = ({ children }: { children: ReactNode }) => {\r\n  const getSystemTheme = (): ThemeMode =>\r\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n      ? \"dark\"\r\n      : \"light\";\r\n\r\n  const getInitialTheme = (): ThemeMode => {\r\n    const storedTheme = localStorage.getItem(\"theme\") as ThemeMode | null;\r\n    if (\r\n      storedTheme === \"light\" ||\r\n      storedTheme === \"dark\" ||\r\n      storedTheme === \"system\"\r\n    ) {\r\n      return storedTheme;\r\n    }\r\n    return getSystemTheme();\r\n  };\r\n\r\n  const [theme, setTheme] = useState<ThemeMode>(getInitialTheme);\r\n\r\n  const applyTheme = (theme: ThemeMode) => {\r\n    // Remove both classes to avoid overlap\r\n    document.documentElement.classList.remove(\"light\", \"dark\");\r\n\r\n    const finalTheme = theme === \"system\" ? getSystemTheme() : theme;\r\n\r\n    document.documentElement.classList.add(finalTheme);\r\n  };\r\n\r\n  const toggleTheme = (newTheme: ThemeMode) => {\r\n    localStorage.setItem(\"theme\", newTheme);\r\n    setTheme(newTheme);\r\n    applyTheme(newTheme);\r\n  };\r\n\r\n  useEffect(() => {\r\n    applyTheme(theme);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [theme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, setTheme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) throw new Error(\"useTheme must be used within ThemeProvider\");\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAkBA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,MAAM,gBAAgB;QAAC,EAAE,QAAQ,EAA2B;;IACjE,MAAM,iBAAiB,IACrB,OAAO,UAAU,CAAC,gCAAgC,OAAO,GACrD,SACA;IAEN,MAAM,kBAAkB;QACtB,MAAM,cAAc,aAAa,OAAO,CAAC;QACzC,IACE,gBAAgB,WAChB,gBAAgB,UAChB,gBAAgB,UAChB;YACA,OAAO;QACT;QACA,OAAO;IACT;IAEA,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa;IAE9C,MAAM,aAAa,CAAC;QAClB,uCAAuC;QACvC,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS;QAEnD,MAAM,aAAa,UAAU,WAAW,mBAAmB;QAE3D,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;IACzC;IAEA,MAAM,cAAc,CAAC;QACnB,aAAa,OAAO,CAAC,SAAS;QAC9B,SAAS;QACT,WAAW;IACb;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,WAAW;QACX,uDAAuD;QACzD;kCAAG;QAAC;KAAM;IAEV,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;YAAU;QAAY;kBAC1D;;;;;;AAGP;GA7Ca;KAAA;AA+CN,MAAM,WAAW;;IACtB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT;IAJa","debugId":null}}]
}