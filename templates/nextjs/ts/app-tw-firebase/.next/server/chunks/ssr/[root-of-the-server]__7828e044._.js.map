{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Nikhi/Projects/opensource/Onetech/templates/nextjs/ts/app-tw-firebase/src/context/ThemeContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { ThemeMode } from \"@/types/ThemeMode\";\r\nimport React, {\r\n  useContext,\r\n  useState,\r\n  ReactNode,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\n\r\ninterface ThemeContextType {\r\n  theme: ThemeMode;\r\n  setTheme: (theme: ThemeMode) => void;\r\n  toggleTheme: (theme: ThemeMode) => void;\r\n}\r\n\r\nconst ThemeContext = React.createContext<ThemeContextType | undefined>(\r\n  undefined\r\n);\r\n\r\nconst ThemeProvider = ({ children }: { children: ReactNode }) => {\r\n  const [theme, setTheme] = useState<ThemeMode>(\"system\"); // temporary default\r\n\r\n  const getSystemTheme = useCallback((): ThemeMode => {\r\n    if (typeof window !== \"undefined\") {\r\n      return window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n        ? \"dark\"\r\n        : \"light\";\r\n    }\r\n    return \"light\"; // fallback\r\n  }, []);\r\n\r\n  const applyTheme = useCallback(\r\n    (theme: ThemeMode) => {\r\n      if (typeof document === \"undefined\") return;\r\n\r\n      document.documentElement.classList.remove(\"light\", \"dark\");\r\n\r\n      const finalTheme = theme === \"system\" ? getSystemTheme() : theme;\r\n      document.documentElement.classList.add(finalTheme);\r\n    },\r\n    [getSystemTheme]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (typeof window === \"undefined\") return;\r\n    const storedTheme =\r\n      typeof window !== \"undefined\"\r\n        ? (localStorage.getItem(\"theme\") as ThemeMode | null)\r\n        : null;\r\n\r\n    const initialTheme =\r\n      storedTheme === \"light\" ||\r\n      storedTheme === \"dark\" ||\r\n      storedTheme === \"system\"\r\n        ? storedTheme\r\n        : getSystemTheme();\r\n\r\n    setTheme(initialTheme);\r\n    applyTheme(initialTheme);\r\n  }, [getSystemTheme, applyTheme]);\r\n\r\n  const toggleTheme = useCallback(\r\n    (newTheme: ThemeMode) => {\r\n      if (typeof window !== \"undefined\") {\r\n        localStorage.setItem(\"theme\", newTheme);\r\n      }\r\n      setTheme(newTheme);\r\n      applyTheme(newTheme);\r\n    },\r\n    [applyTheme]\r\n  );\r\n  // console.log(\"ThemeProvider rendered with theme:\", theme);\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, setTheme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nconst useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) throw new Error(\"useTheme must be used within ThemeProvider\");\r\n  return context;\r\n};\r\n\r\nexport { ThemeProvider, useTheme };\r\n"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAiBA,MAAM,6BAAe,qMAAA,CAAA,UAAK,CAAC,aAAa,CACtC;AAGF,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAA2B;IAC1D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,WAAW,oBAAoB;IAE7E,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACjC;;QAKA,OAAO,SAAS,WAAW;IAC7B,GAAG,EAAE;IAEL,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAC3B,CAAC;QACC,IAAI,OAAO,aAAa,aAAa;QAErC,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS;QAEnD,MAAM,aAAa,UAAU,WAAW,mBAAmB;QAC3D,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;IACzC,GACA;QAAC;KAAe;IAGlB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,wCAAmC;;;QACnC,MAAM;QAKN,MAAM;IASR,GAAG;QAAC;QAAgB;KAAW;IAE/B,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAC5B,CAAC;QACC;;QAGA,SAAS;QACT,WAAW;IACb,GACA;QAAC;KAAW;IAEd,4DAA4D;IAC5D,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;YAAU;QAAY;kBAC1D;;;;;;AAGP;AAEA,MAAM,WAAW;IACf,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Nikhi/Projects/opensource/Onetech/templates/nextjs/ts/app-tw-firebase/src/lib/firebase.tsx"],"sourcesContent":["// app/lib/firebase.tsx\r\n// This file is responsible for Firebase authentication services.\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n} from \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\r\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst auth = getAuth(app);\r\n\r\n// Export the auth object for use in other parts of the application\r\nexport { auth };\r\n// You can also export the app if needed\r\nexport { app };\r\n\r\n/**\r\n * Gets the current authenticated user.\r\n * @returns User | null - The current user or null if not authenticated.\r\n */\r\nexport const getCurrentUser = () => {\r\n  return auth.currentUser;\r\n};\r\n\r\n/**\r\n * Checks if a user is currently signed in.\r\n * @returns boolean - True if user is signed in, false otherwise.\r\n */\r\nexport const isUserSignedIn = () => {\r\n  return auth.currentUser !== null;\r\n};\r\n\r\n/**\r\n * Logs in a user with email and password.\r\n * @param email - The email of the user.\r\n * @param password - The password of the user.\r\n * @returns Promise<User> - The authenticated user object.\r\n */\r\nexport const fireSignIn = async (email: string, password: string) => {\r\n  try {\r\n    // Validate input\r\n    if (!email?.trim() || !password?.trim()) {\r\n      throw new Error(`Email and password are required`);\r\n    }\r\n\r\n    // Validate email format\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email.trim())) {\r\n      throw new Error(\"Please enter a valid email address\");\r\n    }\r\n\r\n    const userCredential = await signInWithEmailAndPassword(\r\n      auth,\r\n      email.trim(),\r\n      password.trim()\r\n    );\r\n\r\n    const user = userCredential.user;\r\n    console.log(\"User signed in successfully:\", user.uid);\r\n    return user;\r\n  } catch (error) {\r\n    const err = error as { code?: string; message?: string };\r\n    console.error(\"Error signing in:\", err.message);\r\n\r\n    // Provide more user-friendly error messages\r\n    if (err.code === \"auth/user-not-found\") {\r\n      throw new Error(\"No account found with this email address\");\r\n    } else if (err.code === \"auth/wrong-password\") {\r\n      throw new Error(\"Incorrect password\");\r\n    } else if (err.code === \"auth/invalid-email\") {\r\n      throw new Error(\"Invalid email address\");\r\n    } else if (err.code === \"auth/too-many-requests\") {\r\n      throw new Error(\"Too many failed attempts. Please try again later\");\r\n    }\r\n\r\n    throw new Error(`Login failed: ${err.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Signs up a new user with email and password.\r\n * @param email - The email of the user to sign up.\r\n * @param password - The password of the user to sign up.\r\n * @returns Promise<User> - The newly created user object.\r\n */\r\nexport const fireSignUp = async (email: string, password: string) => {\r\n  try {\r\n    // Validate input\r\n    if (!email?.trim() || !password?.trim()) {\r\n      throw new Error(\"Email and password are required\");\r\n    }\r\n\r\n    // Validate email format\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email.trim())) {\r\n      throw new Error(\"Please enter a valid email address\");\r\n    }\r\n\r\n    // Validate password strength\r\n    if (password.length < 6) {\r\n      throw new Error(\"Password must be at least 6 characters long\");\r\n    }\r\n\r\n    // Create a new user with email and password\r\n    const userCredential = await createUserWithEmailAndPassword(\r\n      auth,\r\n      email.trim(),\r\n      password.trim()\r\n    );\r\n\r\n    const user = userCredential.user;\r\n    console.log(\"User signed up successfully:\", user.uid);\r\n    return user;\r\n  } catch (error) {\r\n    const err = error as { code?: string; message?: string };\r\n    console.error(\"Error signing in:\", err.message);\r\n\r\n    // Provide more user-friendly error messages\r\n    if (err.code === \"auth/user-not-found\") {\r\n      throw new Error(\"No account found with this email address\");\r\n    } else if (err.code === \"auth/wrong-password\") {\r\n      throw new Error(\"Incorrect password\");\r\n    } else if (err.code === \"auth/invalid-email\") {\r\n      throw new Error(\"Invalid email address\");\r\n    } else if (err.code === \"auth/too-many-requests\") {\r\n      throw new Error(\"Too many failed attempts. Please try again later\");\r\n    }\r\n\r\n    throw new Error(`Login failed: ${err.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Logs out the current user.\r\n */\r\nexport const fireLogout = async () => {\r\n  try {\r\n    // Check if user is signed in\r\n    if (!auth.currentUser) {\r\n      throw new Error(\"No user is currently signed in\");\r\n    }\r\n\r\n    // Sign out the user\r\n    await signOut(auth);\r\n    console.log(\"User signed out successfully\");\r\n  } catch (error) {\r\n    const err = error as { message?: string };\r\n    console.error(\"Error signing out:\", err.message);\r\n    throw new Error(`Logout failed: ${err.message}`);\r\n  }\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Nikhi/Projects/opensource/Onetech/templates/nextjs/ts/app-tw-firebase/src/context/FirebaseContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { auth } from \"@/lib/firebase\";\r\nimport { onAuthStateChanged, User } from \"firebase/auth\";\r\nimport {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  ReactNode,\r\n  useEffect,\r\n} from \"react\";\r\n\r\ninterface FireBaseContextType {\r\n  user: User | null;\r\n}\r\n\r\nconst FireBaseContext = createContext<FireBaseContextType | undefined>(\r\n  undefined\r\n);\r\n\r\nexport const FireBaseProvider = ({ children }: { children: ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null); \r\n  const isProduction = process.env.NEXT_DEV?.toString() !== \"development\";\r\n  useEffect(() => {\r\n    if (isProduction) {\r\n      const unsub = onAuthStateChanged(auth, (user) => {\r\n        if (user) {\r\n          console.log(\"User is signed in:\", user);\r\n          setUser(user);\r\n        } else {\r\n          console.log(\"No user is signed in\");\r\n          setUser(null);\r\n        }\r\n      });\r\n      return () => unsub();\r\n    }\r\n  }, [isProduction]);\r\n\r\n  // // Debugging: Log user state changes\r\n  // useEffect(() => {\r\n  //   console.log(\"User state changed:\", user);\r\n  // }, [user]);\r\n  // // Debugging: Log auth object\r\n  // useEffect(() => {\r\n  //   console.log(\"Auth object:\", auth);\r\n  // }, []);\r\n  // // Debugging: Log auth state listener\r\n  return (\r\n    <FireBaseContext.Provider value={{ user }}>\r\n      {children}\r\n    </FireBaseContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useFireBase = () => {\r\n  const context = useContext(FireBaseContext);\r\n  if (!context)\r\n    throw new Error(\"useFireBase must be used within FireBaseProvider\");\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;AAJA;;;;;AAgBA,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAClC;AAGK,MAAM,mBAAmB,CAAC,EAAE,QAAQ,EAA2B;IACpE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,eAAe,QAAQ,GAAG,CAAC,QAAQ,EAAE,eAAe;IAC1D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,cAAc;YAChB,MAAM,QAAQ,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EAAE,uHAAA,CAAA,OAAI,EAAE,CAAC;gBACtC,IAAI,MAAM;oBACR,QAAQ,GAAG,CAAC,sBAAsB;oBAClC,QAAQ;gBACV,OAAO;oBACL,QAAQ,GAAG,CAAC;oBACZ,QAAQ;gBACV;YACF;YACA,OAAO,IAAM;QACf;IACF,GAAG;QAAC;KAAa;IAEjB,uCAAuC;IACvC,oBAAoB;IACpB,8CAA8C;IAC9C,cAAc;IACd,gCAAgC;IAChC,oBAAoB;IACpB,uCAAuC;IACvC,UAAU;IACV,wCAAwC;IACxC,qBACE,8OAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAK;kBACrC;;;;;;AAGP;AAEO,MAAM,cAAc;IACzB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SACH,MAAM,IAAI,MAAM;IAClB,OAAO;AACT","debugId":null}}]
}